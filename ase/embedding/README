================================
Embedding CALCULATORS AND SCRIPTS
================================

multiase:	Copyright (c) 2012 Aalto University
		Authors: 
		mixer: Lauri Leukkunen (lauri.leukkunen@aalto.fi)
		lammps: Tuukka Verho (tuukka.verho@aalto.fi)
		Olga Lopez Acevedo (olga.lopez.acevedo@aalto.fi)

xxxxxxx:	yyyyy (email)

Description of directory structure
**********************************

::

  multiase/		- contains base class calculators
  	lammps/		- modified ASE lammps interface
  	mixer/		- mixer calculator for combining gpaw and lammps

  tests/		- test scripts
  scripts/		- various utility scripts
  data/			- data files used by tests and scripts
  plot/			- plotting scripts
  docs/			- documentation
  README		- this file
  

Installation and Usage
**********************

To use these scripts you may need to install classical calculators like LAMMPS or GROMACS. LAMMPS needs
to be built as a serial binary in order to work with a parallel DFT calculator like GPAW.
In the following instructions you're expected to put any line with::
  export VARIABLE="SOMETHING"
into your $HOME/.bashrc or equivalent.


LAMMPS Installation
*******************

Download LAMMPS source code from http://lammps.sandia.gov/download.html

  cd lammps-$VERSION/src
  make yes-USER-REAXC

Compile in serial following lammps instructions. Now copy the resulting lmp_machine binary to a directory in your path. A nice
location might be $HOME/bin.

The ASE LAMMPS interface requires the following to be set::
  export LAMMPS_COMMAND=$HOME/bin/lmp_machine

Please adjust according to where you put the lammps binary.


GPAW Installation
*****************

Instruction at https://wiki.fysik.dtu.dk/gpaw/download.html# do work, although
in order to build a parallel GPAW, you need to make sure the 
gpaw-$GPAW_VER/customize.py has the following set::
  mpicompiler = "mpicc.openmpi"
  mpilinker = "mpicc.openmpi"

Then if you're using OpenMPI, you should have these set before building GPAW::
  export OMPI_FC=gfortran
  export OMPI_CC=gcc
  export OMPI_CXX=g++
  export CC=mpicc.openmpi
  export CXX=mpic++.openmpi


Running tests
*************

Tests are designed to be executed from within tests/ directory.


